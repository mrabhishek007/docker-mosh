{"ast":null,"code":"var _jsxFileName = \"/app/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MovieForm from \"./MovieForm\";\nimport MovieList from \"./MovieList\";\nimport api from \"../services/api\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const moviesEndpoint = \"/movies\";\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState();\n\n  const fetchMovies = async () => {\n    try {\n      const {\n        data\n      } = await api.get(moviesEndpoint);\n      setMovies(data);\n    } catch (error) {\n      setError(\"Could not fetch the movies!\");\n    }\n  };\n\n  const handleAddMovie = async title => {\n    try {\n      const movie = {\n        _id: Date.now(),\n        title\n      };\n      setMovies([...movies, movie]);\n      const {\n        data: savedMovie\n      } = await api.create(moviesEndpoint, movie);\n      setMovies([...movies, savedMovie]);\n    } catch (error) {\n      setError(\"Could not save the movie!\");\n      setMovies(movies);\n    }\n  };\n\n  const handleDeleteMovie = async movie => {\n    try {\n      setMovies(movies.filter(m => m !== movie));\n      await api.remove(moviesEndpoint + \"/\" + movie._id);\n    } catch (error) {\n      setError(\"Could not delete the movie!\");\n      setMovies(movies);\n    }\n  };\n\n  useEffect(() => fetchMovies(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MovieForm, {\n      onAddMovie: handleAddMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      role: \"alert\",\n      className: \"Error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies,\n      onDeleteMovie: handleDeleteMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LtFYnm+vi+JrgOW1fSjwFavRXZI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/app/src/components/App.jsx"],"names":["React","useState","useEffect","MovieForm","MovieList","api","App","moviesEndpoint","movies","setMovies","error","setError","fetchMovies","data","get","handleAddMovie","title","movie","_id","Date","now","savedMovie","create","handleDeleteMovie","filter","m","remove"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,cAAc,GAAG,SAAvB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;;AAEA,QAAMW,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMR,GAAG,CAACS,GAAJ,CAAQP,cAAR,CAAvB;AACAE,MAAAA,SAAS,CAACI,IAAD,CAAT;AACD,KAHD,CAGE,OAAOH,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAAC,6BAAD,CAAR;AACD;AACF,GAPD;;AASA,QAAMI,cAAc,GAAG,MAAOC,KAAP,IAAiB;AACtC,QAAI;AACF,YAAMC,KAAK,GAAG;AAAEC,QAAAA,GAAG,EAAEC,IAAI,CAACC,GAAL,EAAP;AAAmBJ,QAAAA;AAAnB,OAAd;AACAP,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYS,KAAZ,CAAD,CAAT;AAEA,YAAM;AAAEJ,QAAAA,IAAI,EAAEQ;AAAR,UAAuB,MAAMhB,GAAG,CAACiB,MAAJ,CAAWf,cAAX,EAA2BU,KAA3B,CAAnC;AAEAR,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYa,UAAZ,CAAD,CAAT;AACD,KAPD,CAOE,OAAOX,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAAC,2BAAD,CAAR;AACAF,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD;AACF,GAZD;;AAcA,QAAMe,iBAAiB,GAAG,MAAON,KAAP,IAAiB;AACzC,QAAI;AACFR,MAAAA,SAAS,CAACD,MAAM,CAACgB,MAAP,CAAeC,CAAD,IAAOA,CAAC,KAAKR,KAA3B,CAAD,CAAT;AACA,YAAMZ,GAAG,CAACqB,MAAJ,CAAWnB,cAAc,GAAG,GAAjB,GAAuBU,KAAK,CAACC,GAAxC,CAAN;AACD,KAHD,CAGE,OAAOR,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAAC,6BAAD,CAAR;AACAF,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD;AACF,GARD;;AAUAN,EAAAA,SAAS,CAAC,MAAMU,WAAW,EAAlB,EAAsB,EAAtB,CAAT;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEG;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGL,KAAK,iBACJ;AAAG,MAAA,IAAI,EAAC,OAAR;AAAgB,MAAA,SAAS,EAAC,OAA1B;AAAA,gBACGA;AADH;AAAA;AAAA;AAAA;AAAA,YAHJ,eAOE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEF,MAAnB;AAA2B,MAAA,aAAa,EAAEe;AAA1C;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAnDQjB,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MovieForm from \"./MovieForm\";\nimport MovieList from \"./MovieList\";\nimport api from \"../services/api\";\nimport \"./App.css\";\n\nfunction App() {\n  const moviesEndpoint = \"/movies\";\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState();\n\n  const fetchMovies = async () => {\n    try {\n      const { data } = await api.get(moviesEndpoint);\n      setMovies(data);\n    } catch (error) {\n      setError(\"Could not fetch the movies!\");\n    }\n  };\n\n  const handleAddMovie = async (title) => {\n    try {\n      const movie = { _id: Date.now(), title };\n      setMovies([...movies, movie]);\n\n      const { data: savedMovie } = await api.create(moviesEndpoint, movie);\n\n      setMovies([...movies, savedMovie]);\n    } catch (error) {\n      setError(\"Could not save the movie!\");\n      setMovies(movies);\n    }\n  };\n\n  const handleDeleteMovie = async (movie) => {\n    try {\n      setMovies(movies.filter((m) => m !== movie));\n      await api.remove(moviesEndpoint + \"/\" + movie._id);\n    } catch (error) {\n      setError(\"Could not delete the movie!\");\n      setMovies(movies);\n    }\n  };\n\n  useEffect(() => fetchMovies(), []);\n\n  return (\n    <div className=\"App\">\n      <MovieForm onAddMovie={handleAddMovie} />\n      {error && (\n        <p role=\"alert\" className=\"Error\">\n          {error}\n        </p>\n      )}\n      <MovieList movies={movies} onDeleteMovie={handleDeleteMovie} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}